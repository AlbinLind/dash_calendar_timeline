{"src/ts/components/DashCalendarTimeline.tsx":{"displayName":"DashCalendarTimeline","description":"Component description","props":{"items":{"description":"","required":true,"type":{"name":"arrayOf","value":{"name":"shape","value":{"id":{"description":"","required":true,"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"string | number"},"group":{"description":"","required":true,"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"string | number"},"title":{"description":"","required":true,"name":"string","raw":"string"},"start_time":{"description":"Unix timestamp in milliseconds","required":true,"name":"number","raw":"number"},"end_time":{"description":"Unix timestamp in milliseconds","required":true,"name":"number","raw":"number"},"canMove":{"description":"Can the item be moved","required":false,"name":"bool","raw":"boolean"},"canResize":{"description":"Can the item be resized at all, and if so, can all or only one edge be resized?\n\nYou cannot disable resizing. This is becuase dash does not\ngenerate literal unions with primitive types well. See https://github.com/plotly/dash/issues/3017\n\"both\": can be resized at both edges\n\"left\": can only be resized at the left edge\n\"right\": can only be resized at the right edge","required":false,"name":"union","value":[{"name":"literal","value":"left"},{"name":"literal","value":"right"},{"name":"literal","value":"both"}],"raw":"boolean | \"left\" | \"right\" | \"both\""},"canChangeGroup":{"description":"Can the item be moved to a different group?","required":false,"name":"bool","raw":"boolean"},"itemProps":{"description":"","required":false,"name":"shape","value":{"className":{"description":"","required":false,"name":"string","raw":"string"},"style":{"description":"Dict with CSS styles to apply to the item","required":false,"name":"objectOf","value":{"name":"any","raw":"any"},"raw":"Record<string, any>"}},"raw":"ItemPropsType"},"hoverInfo":{"description":"Hover information for the item, can be html to show.","required":false,"name":"string","raw":"string"},"sku":{"description":"SKU number for the item","required":false,"name":"number","raw":"number"},"is_fixed":{"description":"Is the item fixed in position","required":false,"name":"bool","raw":"boolean"},"inputs":{"description":"If you want some input fields to be shown for the item, you can specify them here.\n\nWhen the input field changes it will update the `selectedItemInput` prop with the new values.\nWhich can be used in a callback to update the item data.","required":false,"name":"objectOf","value":{"name":"objectOf","value":{"name":"any","raw":"any"},"raw":"Record<string, any>"},"raw":"{ [key: string]: Record<string, any>; }"}},"raw":"CalendarItem"},"raw":"CalendarItem[]"}},"groups":{"description":"","required":true,"type":{"name":"arrayOf","value":{"name":"shape","value":{"id":{"description":"","required":true,"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"string | number"},"title":{"description":"","required":true,"name":"string","raw":"string"},"rightTitle":{"description":"","required":true,"name":"string","raw":"string"},"stackItems":{"description":"","required":false,"name":"bool","raw":"boolean"},"height":{"description":"","required":false,"name":"number","raw":"number"}},"raw":"Group"},"raw":"Group[]"}},"default_time_start":{"description":"Default start time for the timeline","required":false,"type":{"name":"number","raw":"number"}},"default_time_end":{"description":"Default end time for the timeline","required":false,"type":{"name":"number","raw":"number"}},"drag_snap":{"description":"Snap dragged items to a time interval (in milliseconds)","required":false,"type":{"name":"number","raw":"number"}},"min_zoom":{"description":"","required":false,"type":{"name":"number","raw":"number"}},"max_zoom":{"description":"","required":false,"type":{"name":"number","raw":"number"}},"line_height":{"description":"","required":false,"type":{"name":"number","raw":"number"}},"item_height_ratio":{"description":"","required":false,"type":{"name":"number","raw":"number"}},"context_menu_options":{"description":"Options to show in the right click context menu","required":false,"type":{"name":"arrayOf","value":{"name":"string","raw":"string"},"raw":"string[]"}},"visible_time_start":{"description":"","required":false,"type":{"name":"number","raw":"number"}},"visible_time_end":{"description":"","required":false,"type":{"name":"number","raw":"number"}},"enable_external_drop":{"description":"","required":false,"type":{"name":"bool","raw":"boolean"}},"use_resize_handle":{"description":"Should you only be able to resize from the ends? Defaults to true","required":false,"type":{"name":"bool","raw":"boolean"}},"clickedItem":{"description":"The item that was clicked, if any.","required":false,"type":{"name":"shape","value":{"id":{"description":"","required":true,"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"string | number"},"group":{"description":"","required":true,"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"string | number"},"title":{"description":"","required":true,"name":"string","raw":"string"},"start_time":{"description":"Unix timestamp in milliseconds","required":true,"name":"number","raw":"number"},"end_time":{"description":"Unix timestamp in milliseconds","required":true,"name":"number","raw":"number"},"canMove":{"description":"Can the item be moved","required":false,"name":"bool","raw":"boolean"},"canResize":{"description":"Can the item be resized at all, and if so, can all or only one edge be resized?\n\nYou cannot disable resizing. This is becuase dash does not\ngenerate literal unions with primitive types well. See https://github.com/plotly/dash/issues/3017\n\"both\": can be resized at both edges\n\"left\": can only be resized at the left edge\n\"right\": can only be resized at the right edge","required":false,"name":"union","value":[{"name":"literal","value":"left"},{"name":"literal","value":"right"},{"name":"literal","value":"both"}],"raw":"boolean | \"left\" | \"right\" | \"both\""},"canChangeGroup":{"description":"Can the item be moved to a different group?","required":false,"name":"bool","raw":"boolean"},"itemProps":{"description":"","required":false,"name":"shape","value":{"className":{"description":"","required":false,"name":"string","raw":"string"},"style":{"description":"Dict with CSS styles to apply to the item","required":false,"name":"objectOf","value":{"name":"any","raw":"any"},"raw":"Record<string, any>"}},"raw":"ItemPropsType"},"hoverInfo":{"description":"Hover information for the item, can be html to show.","required":false,"name":"string","raw":"string"},"sku":{"description":"SKU number for the item","required":false,"name":"number","raw":"number"},"is_fixed":{"description":"Is the item fixed in position","required":false,"name":"bool","raw":"boolean"},"inputs":{"description":"If you want some input fields to be shown for the item, you can specify them here.\n\nWhen the input field changes it will update the `selectedItemInput` prop with the new values.\nWhich can be used in a callback to update the item data.","required":false,"name":"objectOf","value":{"name":"objectOf","value":{"name":"any","raw":"any"},"raw":"Record<string, any>"},"raw":"{ [key: string]: Record<string, any>; }"}},"raw":"CalendarItem"}},"selectedItemInput":{"description":"","required":false,"type":{"name":"objectOf","value":{"name":"any","raw":"any"},"raw":"Record<string, any>"}},"rightClickedEvent":{"description":"","required":false,"type":{"name":"shape","value":{"time":{"description":"The time (in milliseconds since epoch) where the right click happened.","required":true,"name":"number","raw":"number"},"group_id":{"description":"The group id where the right click happened","required":true,"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"string | number"},"option":{"description":"The option that was clicked, defined in the context menu","required":true,"name":"string","raw":"string"}},"raw":"RightClickEvent"}},"skuChanged":{"description":"SKU number of the item that was changed for the selected item","required":false,"type":{"name":"number","raw":"number"}},"isFixedChanged":{"description":"Is fixed value of the item that was changed for the selected item","required":false,"type":{"name":"bool","raw":"boolean"}},"externalDrop":{"description":"","required":false,"type":{"name":"shape","value":{"data":{"description":"","required":true,"name":"any","raw":"any"},"time":{"description":"","required":true,"name":"number","raw":"number"},"groupId":{"description":"","required":true,"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"string | number"}},"raw":"{ data: any; time: number; groupId: string | number; }"}},"id":{"description":"Unique ID to identify this component in Dash callbacks.","required":false,"type":{"name":"string","raw":"string"}},"setProps":{"description":"Update props to trigger callbacks.\n\nNOTE: The setPropsType cannot be used, as it otherwise thinks\nit is a required argument when creating the dash component.","required":true,"type":{"name":"func","raw":"(props: Record<string, any>) => void"}}},"isContext":false}}